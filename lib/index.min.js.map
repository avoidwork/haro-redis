{"version":3,"file":"index.min.js","sources":["index.js"],"names":["global","deferred","promise","undefined","resolver","rejecter","Promise","resolve","reject","local","store","op","key","data","defer","record","prefix","adapters","id","result","localStorage","getItem","JSON","parse","Error","removeItem","e","setItem","stringify","toArray","require","exports","module","define","haroLocal","window"],"mappings":";;;;;;;;;;;AASA,cAEA,SAAWA,GAIV,QAASC,KACR,GAAIC,GAAUC,OACVC,EAAWD,OACXE,EAAWF,MAOf,OALAD,GAAU,GAAII,GAAQ,SAAUC,EAASC,GACxCJ,EAAWG,EACXF,EAAWG,KAGHD,QAASH,EAAUI,OAAQH,EAAUH,QAASA,GAGxD,QAASO,GAAMC,MAAOC,EAAIC,EAAKC,GAC9B,GAAIC,GAAQb,IACRc,EAAiBZ,SAARS,EACTI,EAASN,MAAMO,SAASR,OAASC,MAAMQ,GACvCC,EAAShB,MAsBb,IApBW,QAAPQ,IACCI,GACHI,EAASC,EAAaC,QAAQL,EAAS,IAAMJ,GAE9B,OAAXO,EACHL,EAAMP,QAAQe,KAAKC,MAAMJ,IAEzBL,EAAMN,OAAO,GAAIgB,OAAM,uCAGxBL,EAASC,EAAaC,QAAQL,GAEf,OAAXG,EACHL,EAAMP,QAAQe,KAAKC,MAAMJ,IAEzBL,EAAMP,cAKE,WAAPI,EACH,IACKI,EACHK,EAAaK,WAAWT,EAAS,IAAMJ,GAEvCQ,EAAaK,WAAWT,GAGzBF,EAAMP,SAAQ,GACb,MAAOmB,GACRZ,EAAMN,OAAOkB,GAIf,GAAW,QAAPf,EACH,IACKI,EACHK,EAAaO,QAAQX,EAAS,IAAMJ,EAAKU,KAAKM,UAAUf,IAExDO,EAAaO,QAAQX,EAAQM,KAAKM,UAAUlB,MAAMmB,YAGnDf,EAAMP,SAAQ,GACb,MAAOmB,GACRZ,EAAMN,OAAOkB,GAIf,MAAOZ,GAAMZ,QAtEd,GAAII,GAAUN,EAAOM,SAAWwB,QAAQ,eAAexB,QACnDc,EAAepB,EAAOoB,cAAgBU,QAAQ,eAyE3B,oBAAZC,SACVC,OAAOD,QAAUtB,EACW,kBAAXwB,QACjBA,OAAO,WACN,MAAOxB,KAGRT,EAAOkC,UAAYzB,GAEA,mBAAXT,QAAyBA,OAASmC","sourcesContent":["/**\r\n * localStorage persistent storage adapter for Har≈ç\r\n *\r\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @copyright 2015\r\n * @license BSD-3-Clause\r\n * @link https://github.com/avoidwork/haro-localstorage\r\n * @version 1.0.3\r\n */\n\"use strict\";\n\n(function (global) {\n\tvar Promise = global.Promise || require(\"es6-promise\").Promise;\n\tvar localStorage = global.localStorage || require(\"localStorage\");\n\n\tfunction deferred() {\n\t\tvar promise = undefined,\n\t\t    resolver = undefined,\n\t\t    rejecter = undefined;\n\n\t\tpromise = new Promise(function (resolve, reject) {\n\t\t\tresolver = resolve;\n\t\t\trejecter = reject;\n\t\t});\n\n\t\treturn { resolve: resolver, reject: rejecter, promise: promise };\n\t}\n\n\tfunction local(store, op, key, data) {\n\t\tvar defer = deferred(),\n\t\t    record = key !== undefined,\n\t\t    prefix = store.adapters.local || store.id,\n\t\t    result = undefined;\n\n\t\tif (op === \"get\") {\n\t\t\tif (record) {\n\t\t\t\tresult = localStorage.getItem(prefix + \"_\" + key);\n\n\t\t\t\tif (result !== null) {\n\t\t\t\t\tdefer.resolve(JSON.parse(result));\n\t\t\t\t} else {\n\t\t\t\t\tdefer.reject(new Error(\"Record not found in localStorage\"));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = localStorage.getItem(prefix);\n\n\t\t\t\tif (result !== null) {\n\t\t\t\t\tdefer.resolve(JSON.parse(result));\n\t\t\t\t} else {\n\t\t\t\t\tdefer.resolve([]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (op === \"remove\") {\n\t\t\ttry {\n\t\t\t\tif (record) {\n\t\t\t\t\tlocalStorage.removeItem(prefix + \"_\" + key);\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.removeItem(prefix);\n\t\t\t\t}\n\n\t\t\t\tdefer.resolve(true);\n\t\t\t} catch (e) {\n\t\t\t\tdefer.reject(e);\n\t\t\t}\n\t\t}\n\n\t\tif (op === \"set\") {\n\t\t\ttry {\n\t\t\t\tif (record) {\n\t\t\t\t\tlocalStorage.setItem(prefix + \"_\" + key, JSON.stringify(data));\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.setItem(prefix, JSON.stringify(store.toArray()));\n\t\t\t\t}\n\n\t\t\t\tdefer.resolve(true);\n\t\t\t} catch (e) {\n\t\t\t\tdefer.reject(e);\n\t\t\t}\n\t\t}\n\n\t\treturn defer.promise;\n\t}\n\n\t// Node, AMD & window supported\n\tif (typeof exports !== \"undefined\") {\n\t\tmodule.exports = local;\n\t} else if (typeof define === \"function\") {\n\t\tdefine(function () {\n\t\t\treturn local;\n\t\t});\n\t} else {\n\t\tglobal.haroLocal = local;\n\t}\n})(typeof global !== \"undefined\" ? global : window);\n"]}